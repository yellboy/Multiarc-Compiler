<architecture>
	<name>Test1</name>
	<memory>
		<size>1000</size>
		<au>1</au>
	</memory>
	<data>
		<w>16</w>
	</data>
	<registers>
		<pc>
			<size>16</size>
			<name>PC</name>
		</pc>
		<a>
			<size>16</size>
			<name>A</name>
		</a>
		<general_purpose>
			<number>32</number>
			<size>16</size>
			<prefix>R</prefix>
			<name>gen_r</name>
		</general_purpose>
		<psw>
			<size>1</size>
			<name>PSW</name>
		</psw>
		<sp>
			<size>16</size>
			<name>SP</name>
			<value>100</value>
		</sp>
	</registers>
	<instruction_mnemonics>
		<name>LD</name>
		<name>BZ</name>
		<name>ST</name>
		<name>ADD</name>
		<name>AND</name>
		<name>JADR</name>
		<name>ASR</name>
		<name>JMP</name>
		<name>JSR</name>
		<name>PUSH</name>
		<name>POP</name>
		<name>RTS</name>
	</instruction_mnemonics>
	<user_tokens>
		<token1>+(</token1>
		<token2>)-</token2>
		<token3>[</token3>
		<token4>]</token4>
	</user_tokens>
	<addressing_modes>
		<jmpaddr>
			<name>jmpaddr</name>
			<file>jmpaddr.cs</file>
			<result>w</result>
			<expression>
				IDENTIFIER
			</expression>
			<expression>
				DEC_NUMBER
			</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</jmpaddr>
		<regdir>
			<name>regdir</name>
			<file>regdir.cs</file>
			<result>w</result>
			<expression>
				<registers_group>gen_r</registers_group>
			</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</regdir>
		<regind>
			<name>regind</name>
			<file>regind.cs</file>
			<result>w</result>
			<expression>
				"(" <registers_group>gen_r</registers_group> ")"
			</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</regind>
		<postdecr>
			<name>postdecr</name>
			<file>postdecr.cs</file>
			<result>w</result>
			<expression>
				"(" <registers_group>gen_r</registers_group> ")-" 
			</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</postdecr>
		<preincr>
			<name>preincr</name>
			<file>preincr.cs</file>
			<result>w</result>
			<expression>
				"+(" <registers_group>gen_r</registers_group> ")" 
			</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</preincr>		
		<memdir>
			<name>memdir</name>
			<file>memdir.cs</file>
			<result>w</result>
			<expression>IDENTIFIER</expression>
			<expression>DEC_NUMBER</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</memdir>		
		<memind>
			<name>memind</name>
			<file>memind.cs</file>
			<result>w</result>
			<expression>"("IDENTIFIER")"</expression>
			<expression>"("DEC_NUMBER")"</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</memind>
		<regindpom>
			<name>regindpom</name>
			<file>regindpom.cs</file>
			<result>w</result>
			<expression>"["<registers_group>gen_r</registers_group>"]"DEC_NUMBER</expression>
			<operand>defined_by_user</operand>
			<operand_type>absolute</operand_type>
		</regindpom>
		<immed>
			<name>immed</name>
			<file>immed.cs</file>
			<result>w</result>
			<expression>"#"IDENTIFIER</expression>
			<expression>"#" [SIGN] DEC_NUMBER</expression>
			<operand>read_from_expression</operand>
			<operand_type>absolute</operand_type>
		</immed>
		<disp>
			<name>disp</name>
			<file>disp.cs</file>
			<result>w</result>
			<expression>DEC_NUMBER</expression>
			<expression>IDENTIFIER</expression>
			<operand>read_from_expression</operand>
			<operand_type>relative</operand_type>
		</disp>
	</addressing_modes>
	<instructions>
		<ld1>
			<mnemonic>LD</mnemonic>
			<size>2</size>
			<file>ld.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000000</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</ld1>
		<ld2>
			<mnemonic>LD</mnemonic>
			<size>4</size>
			<file>ld.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100000010</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</ld2>
		<ld3>
			<mnemonic>LD</mnemonic>
			<size>3</size>
			<file>ld.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000000110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</ld3>
		<ld4>
			<mnemonic>LD</mnemonic>
			<size>4</size>
			<file>ld.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>21</end_bit>
				<value>11000000111</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>immed</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</ld4>
		<st1>
			<mnemonic>ST</mnemonic>
			<size>2</size>
			<file>st.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000010</value>
			</opcode>
			<arguments>
				<arg>
					<type>dst</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</st1>
		<st2>
			<mnemonic>ST</mnemonic>
			<size>4</size>
			<file>st.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100000110</value>
			</opcode>
			<arguments>
				<arg>
					<type>dst</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</st2>
		<st3>
			<mnemonic>ST</mnemonic>
			<size>3</size>
			<file>st.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000001110</value>
			</opcode>
			<arguments>
				<arg>
					<type>dst</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</st3>
		<bz1>
			<mnemonic>BZ</mnemonic>
			<file>bz.cs</file>
			<size>2</size>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>8</end_bit>
				<value>00000000</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>disp</name>
						<operand>
							<start_bit>7</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</bz1>
		<add1>
			<mnemonic>ADD</mnemonic>
			<size>2</size>
			<file>add.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000010</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</add1>
		<add2>
			<mnemonic>ADD</mnemonic>
			<size>4</size>
			<file>add.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100001010</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</add2>
		<add3>
			<mnemonic>ADD</mnemonic>
			<size>3</size>
			<file>add.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000010110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</add3>
		<add4>
			<mnemonic>ADD</mnemonic>
			<size>4</size>
			<file>add.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>21</end_bit>
				<value>11000010111</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>immed</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</add4>
		<and1>
			<mnemonic>AND</mnemonic>
			<size>2</size>
			<file>and.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000011</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</and1>
		<and2>
			<mnemonic>AND</mnemonic>
			<size>4</size>
			<file>and.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100001110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</and2>
		<and3>
			<mnemonic>AND</mnemonic>
			<size>3</size>
			<file>and.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000011110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</and3>
		<and4>
			<mnemonic>AND</mnemonic>
			<size>4</size>
			<file>and.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>21</end_bit>
				<value>11000011111</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>immed</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</and4>
		<asr1>
			<mnemonic>ASR</mnemonic>
			<size>2</size>
			<file>asr.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000100</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</asr1>
		<asr2>
			<mnemonic>ASR</mnemonic>
			<size>4</size>
			<file>asr.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100010010</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</asr2>
		<asr3>
			<mnemonic>ASR</mnemonic>
			<size>3</size>
			<file>asr.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000100110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</asr3>
		<asr4>
			<mnemonic>ASR</mnemonic>
			<size>4</size>
			<file>asr.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>21</end_bit>
				<value>11000100111</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>immed</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</asr4>
		<jadr1>
			<mnemonic>JADR</mnemonic>
			<size>2</size>
			<file>jadr.cs</file>
			<opcode>
				<start_bit>15</start_bit>
				<end_bit>7</end_bit>
				<value>110000101</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regdir</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>00</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>regind</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>01</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>postdecr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>10</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>preincr</name>
						<opcode>
							<start_bit>6</start_bit>
							<end_bit>5</end_bit>
							<value>11</value>
						</opcode>
						<operand>
							<start_bit>4</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</jadr1>
		<jadr2>
			<mnemonic>JADR</mnemonic>
			<size>4</size>
			<file>jadr.cs</file>
			<opcode>
				<start_bit>31</start_bit>
				<end_bit>22</end_bit>
				<value>1100010110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>0</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
					<addressing_mode>
						<name>memind</name>
						<opcode>
							<start_bit>21</start_bit>
							<end_bit>21</end_bit>
							<value>1</value>
						</opcode>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</jadr2>
		<jadr3>
			<mnemonic>JADR</mnemonic>
			<size>3</size>
			<file>jadr.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>13</end_bit>
				<value>11000101110</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>regindpom</name>
						<operand>
							<start_bit>12</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</jadr3>
		<jmp1>
			<mnemonic>JMP</mnemonic>
			<size>3</size>
			<file>jmp.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>16</end_bit>
				<value>01000000</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>jmpaddr</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</jmp1>
		<jsr1>
			<mnemonic>JSR</mnemonic>
			<size>3</size>
			<file>jsr.cs</file>
			<opcode>
				<start_bit>23</start_bit>
				<end_bit>16</end_bit>
				<value>01000001</value>
			</opcode>
			<arguments>
				<arg>
					<type>src</type>
					<addressing_mode>
						<name>memdir</name>
						<operand>
							<start_bit>15</start_bit>
							<end_bit>0</end_bit>
						</operand>
					</addressing_mode>
				</arg>
			</arguments>
		</jsr1>
		<push1>
			<mnemonic>PUSH</mnemonic>
			<size>1</size>
			<file>push.cs</file>
			<opcode>
				<start_bit>7</start_bit>
				<end_bit>0</end_bit>
				<value>10000000</value>
			</opcode>
		</push1>
		<pop1>
			<mnemonic>POP</mnemonic>
			<size>1</size>
			<file>pop.cs</file>
			<opcode>
				<start_bit>7</start_bit>
				<end_bit>0</end_bit>
				<value>10000001</value>
			</opcode>
		</pop1>
		<rts1>
			<mnemonic>RTS</mnemonic>
			<size>1</size>
			<file>rts.cs</file>
			<opcode>
				<start_bit>7</start_bit>
				<end_bit>0</end_bit>
				<value>10000010</value>
			</opcode>
		</rts1>
	</instructions>
</architecture>